################################################################################
# Nginx with Shibboleth Static Module
################################################################################
# https://github.com/nginx-shib/nginx-http-shibboleth/blob/master/README.rst
# https://davidjb.com/blog/2013/04/integrating-nginx-and-a-shibboleth-sp-with-fastcgi/
load_module /usr/lib64/nginx/modules/ngx_http_shibboleth_module.so;
load_module /usr/lib64/nginx/modules/ngx_http_headers_more_filter_module.so;

user nginx;
worker_processes  1;

error_log   /var/log/nginx/error.log warn;

#pid        logs/nginx.pid;
#pid         /var/log/nginx/nginx.pid;

events {
    # Sets the maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections  1024;
}

# Nginx uses a Server and Location Block Matching Procedure
# Server Block Match is based on a strict order: 
# first all ports are evaluated to determine possible
# matches. Then Host in request is compared to 
# the server_name definition
#
# Location Block Matching
# The URI is compared here.
# Syntax:
# location optional_modifier uri {}
# The optional_modifier may contain:
#  (none): If no modifiers are present, the location is interpreted as a prefix match. This means that the location given will be matched against the beginning of the request URI to determine a match.
#  =: If an equal sign is used, this block will be considered a match if the request URI exactly matches the location given.
#  ~: If a tilde modifier is present, this location will be interpreted as a case-sensitive regular expression match.
#  ~*: If a tilde and asterisk modifier is used, the location block will be interpreted as a case-insensitive regular expression match.
#  ^~: If a carat and tilde modifier is present, and if this block is selected as the best non-regular expression match, regular expression matching will not take place.

http {


    # Defines a group of servers. Servers can listen on different ports. In addition, servers listening on TCP and UNIX-domain sockets can be mixed.
    # Load balancing of requests are distributed between the servers using a weighted round-robin balancing method.
    # DO NOT HARDCODE IP ADDRESSES FOR DOCKER CONTAINERS. Docker will resolve the service name to its internally-assigned IP addresses. 
    #docker-compose also supports networks.net.aliases: to map service names to add other aliases (hostnames).
    # These upstream servers represent sockets. If a Docker container changes, this config should be reloaded nginx -s reload
    #upstream DOCKER-MCS {
      # When published docker ports directly to host network
      #server localhost:8181;
      # When published docker ports are within a network namespace
    #  server mcs:8181;
    #}

    upstream DOCKER-SHIBD-AUTHORIZER {
      # When published docker ports directly to host network
      server localhost:9001;
      #server shibd:9001;
    }

    upstream DOCKER-SHIBD-RESPONDER {
      # When published docker ports directly to host network
      server localhost:9002;
      # When published docker ports are within a network namespace
      #server shibd:9002;
    }

    include       mime.types;
    default_type  application/octet-stream;

    types_hash_max_size 4096;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    #access_log /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;

        server_name  {{nginx_server_name}};
        server_name _;
        # 301 Moved Permanently effective redirect
        return 301 https://$host$request_uri;
    }

    # The server context defines the port receiving incoming requests and what domain this
    # configuration should match, and where it should be sent to.
    server {
      # A lone port means listen to every interface on port
      listen 443 ssl http2;
      #listen [::]:443 ssl http2;

      server_name  {{nginx_server_name}};

      # SSL Certificates are set in the docker-compose.OS.yml. The /certs/ path should be bound to an OS-specific location at runtime.
      # These will be commented out if no certicate exists. Any other SSL-related instruction should also be commented out.
      ssl_certificate {{nginx_ssl_certificate.dest}};
      ssl_certificate_key {{nginx_ssl_certificate_key.dest}};

      # Enable session resumption to improve https performance
      # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
      ssl_session_cache shared:SSL:50m;
      ssl_session_timeout 5m;

      # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
      ssl_dhparam /etc/nginx/ssl/dhparam.pem;

      # Enables server-side protection from BEAST attacks
      # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
      ssl_prefer_server_ciphers on;
      ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;

      # Ciphers chosen for forward secrecy and compatibility
      # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
      # ssl_ciphers HIGH:!aNULL:!MD5:!3DES;
      ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

      # Config to enable HSTS (HTTP Strict Transport Security) [1] to avoid ssl
      # stripping [2].
      # [1] https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
      # [2] https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
      add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

      # can use SAMEORIGIN or even set an uri with ALLOW-FROM uri [2].
      # [1] http://en.wikipedia.org/wiki/Clickjacking
      # [2] https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
      add_header X-Frame-Options SAMEORIGIN;

      # When serving user-supplied content, include a X-Content-Type-Options:
      # nosniff header along with the Content-Type: header, to disable
      # content-type sniffing on some browsers.
      add_header X-Content-Type-Options nosniff;

      # This header enables the cross-site scripting (XSS) filter built into most
      # recent web browsers.    It's usually enabled by default anyway, so the role
      # of this header is to re-enable the filter for this particular website if
      # it was disabled by the user.
      # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
      add_header X-XSS-Protection "1; mode=block";

      # Accept large ingests
      client_max_body_size 0;

      # FastCGI Authorizer Module (uses = comparator because it is exactly shibauthorizer every time)
      location = /shibauthorizer {
        internal; # not accessible from outside
        #access_log /var/log/nginx/l.shibauthorizer.access.log;
        #error_log  /var/log/nginx/l.shibauthorizer.error.log debug;
        include fastcgi_params;
        fastcgi_pass DOCKER-SHIBD-AUTHORIZER;
      }

      # FastCGI Responder Module
      location /Shibboleth.sso {
        access_log /var/log/nginx/l.shibresponder.access.log;
        error_log  /var/log/nginx/l.shibresponder.error.log debug;
        include fastcgi_params;
        fastcgi_pass DOCKER-SHIBD-RESPONDER;
      }

      # Resources for Shibboleth error pages
      location /shibboleth-sp {
        # TODO
      }

      # Redirect to /cxf
      #rewrite ^/$ /cxf break;

      # Location Block Syntax
      # location optional_modifier location_match {}
      # optional_modifier: NONE, =, ~, ~*, ^~
      # location_match defines what Nginx should compare the $request_uri to
      # (none): If no modifiers are present, the location is interpreted as a prefix match. This means that the location given will be matched against the beginning of the request URI to determine a match.
      # =: If an equal sign is used, this block will be considered a match if the request URI exactly matches the location given.
      # ~: If a tilde modifier is present, this location will be interpreted as a case-sensitive regular expression match.
      # ~*: If a tilde and asterisk modifier is used, the location block will be interpreted as a case-insensitive regular expression match.
      # ^~: If a carat and tilde modifier is present, and if this block is selected as the best non-regular expression match, regular expression matching will not take place.
      location / {

        proxy_set_header Host $host; # first server_name of this server block
        proxy_set_header X-Real-IP $remote_addr; # source ip of source host
        proxy_set_header Referer $http_referer;

        # Next 3 are equivalent of Apache HTTP's ProxyPassReverse
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # A list containing the IP addresses of every server the client has been proxied through.

        # Ensure redirect location headers route to HTTPS and allows $host to originate somewhere other than this host
        # Default behavior is to redirect the location to whatever proxy_pass specifies
        proxy_redirect http://$host https://$host;

        proxy_set_header X-Forwarded-Proto $scheme; # Set scheme of this request, which is https for future requests

        proxy_cookie_path / "/; HTTPOnly; Secure";

        # Response buffering
        proxy_buffering off;

        # Request buffering
        proxy_request_buffering off;

        # Require reloading of resource from browser
        add_header Cache-Control no-cache;
        # Disable nginx resource caching
        expires -1;

        root {{nginx_html_root}};

        # Secure traffic with Shibboleth
        # Prevent Spoofing
        include conf.d/clear_headers.conf;

        # Switches Shibboleth auth request module on (default off) and sets URI asked for auth.
        # URI should point to the Nginx location block taht points to the Shibboleth FastCGI authorizer.
        shib_request /shibauthorizer;
        shib_request_use_headers on;
      }

      location /cxf {
        # Enable cross-origin resource sharing for web frontend development
        include conf.d/cors.conf;
        #proxy_pass         http://DOCKER-MCS;
        proxy_pass         http://127.0.0.1:8181;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        #proxy_set_header   X-Forwarded-Port $server_port;
        #proxy_set_header   X-Forwarded-Proto $scheme;
        
        # Secure traffic with Shibboleth
        # Prevent Spoofing
        include conf.d/clear_headers.conf;

        # Switches Shibboleth auth request module on (default off) and sets URI asked for auth.
        # URI should point to the Nginx location block taht points to the Shibboleth FastCGI authorizer.
        shib_request /shibauthorizer;
        shib_request_use_headers on;
      }

      location /cxf/admin {
        proxy_pass         http://127.0.0.1:8181;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
      }

   }
}
